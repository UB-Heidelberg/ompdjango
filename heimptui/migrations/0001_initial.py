# -*- coding: utf-8 -*-
from __future__ import unicode_literals

from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AccessKeys',
            fields=[
                ('access_key_id', models.BigIntegerField(primary_key=True, serialize=False)),
                ('context', models.CharField(max_length=40)),
                ('key_hash', models.CharField(max_length=40)),
                ('user_id', models.BigIntegerField()),
                ('assoc_id', models.BigIntegerField(blank=True, null=True)),
                ('expiry_date', models.DateTimeField()),
            ],
            options={
                'db_table': 'access_keys',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Announcements',
            fields=[
                ('announcement_id', models.BigIntegerField(primary_key=True, serialize=False)),
                ('assoc_type', models.SmallIntegerField(blank=True, null=True)),
                ('assoc_id', models.BigIntegerField()),
                ('type_id', models.BigIntegerField(blank=True, null=True)),
                ('date_expire', models.DateTimeField(blank=True, null=True)),
                ('date_posted', models.DateTimeField()),
            ],
            options={
                'db_table': 'announcements',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AnnouncementSettings',
            fields=[
                ('id', models.AutoField(primary_key=True, auto_created=True, verbose_name='ID', serialize=False)),
                ('announcement_id', models.BigIntegerField()),
                ('locale', models.CharField(max_length=5)),
                ('setting_name', models.CharField(max_length=255)),
                ('setting_value', models.TextField(blank=True, null=True)),
                ('setting_type', models.CharField(max_length=6)),
            ],
            options={
                'db_table': 'announcement_settings',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AnnouncementTypes',
            fields=[
                ('type_id', models.BigIntegerField(primary_key=True, serialize=False)),
                ('assoc_type', models.SmallIntegerField(blank=True, null=True)),
                ('assoc_id', models.BigIntegerField()),
            ],
            options={
                'db_table': 'announcement_types',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AnnouncementTypeSettings',
            fields=[
                ('id', models.AutoField(primary_key=True, auto_created=True, verbose_name='ID', serialize=False)),
                ('type_id', models.BigIntegerField()),
                ('locale', models.CharField(max_length=5)),
                ('setting_name', models.CharField(max_length=255)),
                ('setting_value', models.TextField(blank=True, null=True)),
                ('setting_type', models.CharField(max_length=6)),
            ],
            options={
                'db_table': 'announcement_type_settings',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Authors',
            fields=[
                ('author_id', models.BigIntegerField(primary_key=True, serialize=False)),
                ('submission_id', models.BigIntegerField()),
                ('primary_contact', models.IntegerField()),
                ('seq', models.FloatField()),
                ('first_name', models.CharField(max_length=40)),
                ('middle_name', models.CharField(max_length=40, blank=True, null=True)),
                ('last_name', models.CharField(max_length=90)),
                ('suffix', models.CharField(max_length=40, blank=True, null=True)),
                ('country', models.CharField(max_length=90, blank=True, null=True)),
                ('email', models.CharField(max_length=90)),
                ('url', models.CharField(max_length=2047, blank=True, null=True)),
                ('user_group_id', models.BigIntegerField(blank=True, null=True)),
                ('include_in_browse', models.IntegerField()),
            ],
            options={
                'db_table': 'authors',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthorSettings',
            fields=[
                ('author_id', models.BigIntegerField(primary_key=True, serialize=False)),
                ('locale', models.CharField(max_length=5)),
                ('setting_name', models.CharField(max_length=255)),
                ('setting_value', models.TextField(blank=True, null=True)),
                ('setting_type', models.CharField(max_length=6)),
            ],
            options={
                'db_table': 'author_settings',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthSources',
            fields=[
                ('auth_id', models.BigIntegerField(primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=60)),
                ('plugin', models.CharField(max_length=32)),
                ('auth_default', models.IntegerField()),
                ('settings', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'auth_sources',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CataloguingMetadataFields',
            fields=[
                ('field_id', models.BigIntegerField(primary_key=True, serialize=False)),
                ('press_id', models.BigIntegerField()),
                ('enabled', models.IntegerField()),
            ],
            options={
                'db_table': 'cataloguing_metadata_fields',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CataloguingMetadataFieldSettings',
            fields=[
                ('id', models.AutoField(primary_key=True, auto_created=True, verbose_name='ID', serialize=False)),
                ('field_id', models.BigIntegerField()),
                ('locale', models.CharField(max_length=5)),
                ('setting_name', models.CharField(max_length=255)),
                ('setting_value', models.TextField(blank=True, null=True)),
                ('setting_type', models.CharField(max_length=6)),
            ],
            options={
                'db_table': 'cataloguing_metadata_field_settings',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Categories',
            fields=[
                ('category_id', models.BigIntegerField(primary_key=True, serialize=False)),
                ('press_id', models.BigIntegerField()),
                ('parent_id', models.BigIntegerField()),
                ('path', models.CharField(max_length=255)),
                ('image', models.TextField(blank=True, null=True)),
                ('seq', models.BigIntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'categories',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CategorySettings',
            fields=[
                ('id', models.AutoField(primary_key=True, auto_created=True, verbose_name='ID', serialize=False)),
                ('category_id', models.BigIntegerField()),
                ('locale', models.CharField(max_length=5)),
                ('setting_name', models.CharField(max_length=255)),
                ('setting_value', models.TextField(blank=True, null=True)),
                ('setting_type', models.CharField(max_length=6)),
            ],
            options={
                'db_table': 'category_settings',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Citations',
            fields=[
                ('citation_id', models.BigIntegerField(primary_key=True, serialize=False)),
                ('assoc_type', models.BigIntegerField()),
                ('assoc_id', models.BigIntegerField()),
                ('citation_state', models.BigIntegerField()),
                ('raw_citation', models.TextField(blank=True, null=True)),
                ('seq', models.BigIntegerField()),
                ('lock_id', models.CharField(max_length=23, blank=True, null=True)),
            ],
            options={
                'db_table': 'citations',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CitationSettings',
            fields=[
                ('id', models.AutoField(primary_key=True, auto_created=True, verbose_name='ID', serialize=False)),
                ('citation_id', models.BigIntegerField()),
                ('locale', models.CharField(max_length=5)),
                ('setting_name', models.CharField(max_length=255)),
                ('setting_value', models.TextField(blank=True, null=True)),
                ('setting_type', models.CharField(max_length=6)),
            ],
            options={
                'db_table': 'citation_settings',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CompletedPayments',
            fields=[
                ('completed_payment_id', models.BigIntegerField(primary_key=True, serialize=False)),
                ('timestamp', models.DateTimeField()),
                ('payment_type', models.BigIntegerField()),
                ('press_id', models.BigIntegerField()),
                ('user_id', models.BigIntegerField(blank=True, null=True)),
                ('assoc_id', models.CharField(max_length=16, blank=True, null=True)),
                ('amount', models.FloatField()),
                ('currency_code_alpha', models.CharField(max_length=3, blank=True, null=True)),
                ('payment_method_plugin_name', models.CharField(max_length=80, blank=True, null=True)),
            ],
            options={
                'db_table': 'completed_payments',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ControlledVocabEntries',
            fields=[
                ('controlled_vocab_entry_id', models.BigIntegerField(primary_key=True, serialize=False)),
                ('controlled_vocab_id', models.BigIntegerField()),
                ('seq', models.FloatField(blank=True, null=True)),
            ],
            options={
                'db_table': 'controlled_vocab_entries',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ControlledVocabEntrySettings',
            fields=[
                ('id', models.AutoField(primary_key=True, auto_created=True, verbose_name='ID', serialize=False)),
                ('controlled_vocab_entry_id', models.BigIntegerField()),
                ('locale', models.CharField(max_length=5)),
                ('setting_name', models.CharField(max_length=255)),
                ('setting_value', models.TextField(blank=True, null=True)),
                ('setting_type', models.CharField(max_length=6)),
            ],
            options={
                'db_table': 'controlled_vocab_entry_settings',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ControlledVocabs',
            fields=[
                ('controlled_vocab_id', models.BigIntegerField(primary_key=True, serialize=False)),
                ('symbolic', models.CharField(max_length=64)),
                ('assoc_type', models.BigIntegerField()),
                ('assoc_id', models.BigIntegerField()),
            ],
            options={
                'db_table': 'controlled_vocabs',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DataObjectTombstoneOaiSetObjects',
            fields=[
                ('object_id', models.BigIntegerField(primary_key=True, serialize=False)),
                ('tombstone_id', models.BigIntegerField()),
                ('assoc_type', models.BigIntegerField()),
                ('assoc_id', models.BigIntegerField()),
            ],
            options={
                'db_table': 'data_object_tombstone_oai_set_objects',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DataObjectTombstones',
            fields=[
                ('tombstone_id', models.BigIntegerField(primary_key=True, serialize=False)),
                ('data_object_id', models.BigIntegerField()),
                ('date_deleted', models.DateTimeField()),
                ('set_spec', models.CharField(max_length=255)),
                ('set_name', models.CharField(max_length=255)),
                ('oai_identifier', models.CharField(max_length=255)),
            ],
            options={
                'db_table': 'data_object_tombstones',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DataObjectTombstoneSettings',
            fields=[
                ('id', models.AutoField(primary_key=True, auto_created=True, verbose_name='ID', serialize=False)),
                ('tombstone_id', models.BigIntegerField()),
                ('locale', models.CharField(max_length=5)),
                ('setting_name', models.CharField(max_length=255)),
                ('setting_value', models.TextField(blank=True, null=True)),
                ('setting_type', models.CharField(max_length=6)),
            ],
            options={
                'db_table': 'data_object_tombstone_settings',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='EditDecisions',
            fields=[
                ('edit_decision_id', models.BigIntegerField(primary_key=True, serialize=False)),
                ('submission_id', models.BigIntegerField()),
                ('review_round_id', models.BigIntegerField()),
                ('stage_id', models.BigIntegerField(blank=True, null=True)),
                ('round', models.IntegerField()),
                ('editor_id', models.BigIntegerField()),
                ('decision', models.IntegerField()),
                ('date_decided', models.DateTimeField()),
            ],
            options={
                'db_table': 'edit_decisions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='EmailLog',
            fields=[
                ('log_id', models.BigIntegerField(primary_key=True, serialize=False)),
                ('assoc_type', models.BigIntegerField(blank=True, null=True)),
                ('assoc_id', models.BigIntegerField(blank=True, null=True)),
                ('sender_id', models.BigIntegerField()),
                ('date_sent', models.DateTimeField()),
                ('ip_address', models.CharField(max_length=39, blank=True, null=True)),
                ('event_type', models.BigIntegerField(blank=True, null=True)),
                ('from_address', models.CharField(max_length=255, blank=True, null=True)),
                ('recipients', models.TextField(blank=True, null=True)),
                ('cc_recipients', models.TextField(blank=True, null=True)),
                ('bcc_recipients', models.TextField(blank=True, null=True)),
                ('subject', models.CharField(max_length=255, blank=True, null=True)),
                ('body', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'email_log',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='EmailLogUsers',
            fields=[
                ('id', models.AutoField(primary_key=True, auto_created=True, verbose_name='ID', serialize=False)),
                ('email_log_id', models.BigIntegerField()),
                ('user_id', models.BigIntegerField()),
            ],
            options={
                'db_table': 'email_log_users',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='EmailTemplates',
            fields=[
                ('email_id', models.BigIntegerField(primary_key=True, serialize=False)),
                ('email_key', models.CharField(max_length=64)),
                ('assoc_type', models.BigIntegerField(blank=True, null=True)),
                ('assoc_id', models.BigIntegerField(blank=True, null=True)),
                ('enabled', models.IntegerField()),
            ],
            options={
                'db_table': 'email_templates',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='EmailTemplatesData',
            fields=[
                ('id', models.AutoField(primary_key=True, auto_created=True, verbose_name='ID', serialize=False)),
                ('email_key', models.CharField(max_length=64)),
                ('locale', models.CharField(max_length=5)),
                ('assoc_type', models.BigIntegerField(blank=True, null=True)),
                ('assoc_id', models.BigIntegerField(blank=True, null=True)),
                ('subject', models.CharField(max_length=120)),
                ('body', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'email_templates_data',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='EmailTemplatesDefault',
            fields=[
                ('email_id', models.BigIntegerField(primary_key=True, serialize=False)),
                ('email_key', models.CharField(max_length=64)),
                ('can_disable', models.IntegerField()),
                ('can_edit', models.IntegerField()),
                ('from_role_id', models.BigIntegerField(blank=True, null=True)),
                ('to_role_id', models.BigIntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'email_templates_default',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='EmailTemplatesDefaultData',
            fields=[
                ('id', models.AutoField(primary_key=True, auto_created=True, verbose_name='ID', serialize=False)),
                ('email_key', models.CharField(max_length=64)),
                ('locale', models.CharField(max_length=5)),
                ('subject', models.CharField(max_length=120)),
                ('body', models.TextField(blank=True, null=True)),
                ('description', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'email_templates_default_data',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='EventLog',
            fields=[
                ('log_id', models.BigIntegerField(primary_key=True, serialize=False)),
                ('assoc_type', models.BigIntegerField(blank=True, null=True)),
                ('assoc_id', models.BigIntegerField(blank=True, null=True)),
                ('user_id', models.BigIntegerField()),
                ('date_logged', models.DateTimeField()),
                ('ip_address', models.CharField(max_length=39)),
                ('event_type', models.BigIntegerField(blank=True, null=True)),
                ('message', models.TextField(blank=True, null=True)),
                ('is_translated', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'event_log',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='EventLogSettings',
            fields=[
                ('id', models.AutoField(primary_key=True, auto_created=True, verbose_name='ID', serialize=False)),
                ('log_id', models.BigIntegerField()),
                ('setting_name', models.CharField(max_length=255)),
                ('setting_value', models.TextField(blank=True, null=True)),
                ('setting_type', models.CharField(max_length=6)),
            ],
            options={
                'db_table': 'event_log_settings',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Features',
            fields=[
                ('id', models.AutoField(primary_key=True, auto_created=True, verbose_name='ID', serialize=False)),
                ('submission_id', models.BigIntegerField()),
                ('assoc_type', models.BigIntegerField()),
                ('assoc_id', models.BigIntegerField()),
                ('seq', models.BigIntegerField()),
            ],
            options={
                'db_table': 'features',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='FilterGroups',
            fields=[
                ('filter_group_id', models.BigIntegerField(primary_key=True, serialize=False)),
                ('symbolic', models.CharField(max_length=255, blank=True, null=True, unique=True)),
                ('display_name', models.CharField(max_length=255, blank=True, null=True)),
                ('description', models.CharField(max_length=255, blank=True, null=True)),
                ('input_type', models.CharField(max_length=255, blank=True, null=True)),
                ('output_type', models.CharField(max_length=255, blank=True, null=True)),
            ],
            options={
                'db_table': 'filter_groups',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Filters',
            fields=[
                ('filter_id', models.BigIntegerField(primary_key=True, serialize=False)),
                ('filter_group_id', models.BigIntegerField()),
                ('context_id', models.BigIntegerField()),
                ('display_name', models.CharField(max_length=255, blank=True, null=True)),
                ('class_name', models.CharField(max_length=255, blank=True, null=True)),
                ('is_template', models.IntegerField()),
                ('parent_filter_id', models.BigIntegerField()),
                ('seq', models.BigIntegerField()),
            ],
            options={
                'db_table': 'filters',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='FilterSettings',
            fields=[
                ('id', models.AutoField(primary_key=True, auto_created=True, verbose_name='ID', serialize=False)),
                ('filter_id', models.BigIntegerField()),
                ('locale', models.CharField(max_length=5)),
                ('setting_name', models.CharField(max_length=255)),
                ('setting_value', models.TextField(blank=True, null=True)),
                ('setting_type', models.CharField(max_length=6)),
            ],
            options={
                'db_table': 'filter_settings',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='FooterCategories',
            fields=[
                ('footer_category_id', models.BigIntegerField(primary_key=True, serialize=False)),
                ('context_id', models.BigIntegerField()),
                ('path', models.CharField(max_length=255)),
            ],
            options={
                'db_table': 'footer_categories',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='FooterCategorySettings',
            fields=[
                ('id', models.AutoField(primary_key=True, auto_created=True, verbose_name='ID', serialize=False)),
                ('footer_category_id', models.BigIntegerField()),
                ('locale', models.CharField(max_length=5)),
                ('setting_name', models.CharField(max_length=255)),
                ('setting_value', models.TextField(blank=True, null=True)),
                ('setting_type', models.CharField(max_length=6)),
            ],
            options={
                'db_table': 'footer_category_settings',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Footerlinks',
            fields=[
                ('footerlink_id', models.BigIntegerField(primary_key=True, serialize=False)),
                ('context_id', models.BigIntegerField()),
                ('footer_category_id', models.BigIntegerField()),
            ],
            options={
                'db_table': 'footerlinks',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='FooterlinkSettings',
            fields=[
                ('id', models.AutoField(primary_key=True, auto_created=True, verbose_name='ID', serialize=False)),
                ('footerlink_id', models.BigIntegerField()),
                ('locale', models.CharField(max_length=5)),
                ('setting_name', models.CharField(max_length=255)),
                ('setting_value', models.TextField(blank=True, null=True)),
                ('setting_type', models.CharField(max_length=6)),
            ],
            options={
                'db_table': 'footerlink_settings',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Genres',
            fields=[
                ('genre_id', models.BigIntegerField(primary_key=True, serialize=False)),
                ('context_id', models.BigIntegerField()),
                ('seq', models.BigIntegerField(blank=True, null=True)),
                ('sortable', models.IntegerField()),
                ('enabled', models.IntegerField()),
                ('category', models.BigIntegerField()),
                ('dependent', models.IntegerField()),
                ('entry_key', models.CharField(max_length=30, blank=True, null=True)),
                ('supplementary', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'genres',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GenreSettings',
            fields=[
                ('id', models.AutoField(primary_key=True, auto_created=True, verbose_name='ID', serialize=False)),
                ('genre_id', models.BigIntegerField()),
                ('locale', models.CharField(max_length=5)),
                ('setting_name', models.CharField(max_length=255)),
                ('setting_value', models.TextField(blank=True, null=True)),
                ('setting_type', models.CharField(max_length=6)),
            ],
            options={
                'db_table': 'genre_settings',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='IdentificationCodes',
            fields=[
                ('identification_code_id', models.BigIntegerField(primary_key=True, serialize=False)),
                ('publication_format_id', models.BigIntegerField()),
                ('code', models.CharField(max_length=40)),
                ('value', models.CharField(max_length=255)),
            ],
            options={
                'db_table': 'identification_codes',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ItemViews',
            fields=[
                ('id', models.AutoField(primary_key=True, auto_created=True, verbose_name='ID', serialize=False)),
                ('assoc_type', models.BigIntegerField()),
                ('assoc_id', models.CharField(max_length=32)),
                ('user_id', models.BigIntegerField(blank=True, null=True)),
                ('date_last_viewed', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'item_views',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='LibraryFiles',
            fields=[
                ('file_id', models.BigIntegerField(primary_key=True, serialize=False)),
                ('context_id', models.BigIntegerField()),
                ('file_name', models.CharField(max_length=255)),
                ('original_file_name', models.CharField(max_length=255)),
                ('file_type', models.CharField(max_length=255)),
                ('file_size', models.BigIntegerField()),
                ('type', models.IntegerField()),
                ('date_uploaded', models.DateTimeField()),
                ('date_modified', models.DateTimeField()),
                ('submission_id', models.BigIntegerField()),
            ],
            options={
                'db_table': 'library_files',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='LibraryFileSettings',
            fields=[
                ('id', models.AutoField(primary_key=True, auto_created=True, verbose_name='ID', serialize=False)),
                ('file_id', models.BigIntegerField()),
                ('locale', models.CharField(max_length=5)),
                ('setting_name', models.CharField(max_length=255)),
                ('setting_value', models.TextField(blank=True, null=True)),
                ('setting_type', models.CharField(max_length=6)),
            ],
            options={
                'db_table': 'library_file_settings',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Markets',
            fields=[
                ('market_id', models.BigIntegerField(primary_key=True, serialize=False)),
                ('publication_format_id', models.BigIntegerField()),
                ('countries_included', models.TextField(blank=True, null=True)),
                ('countries_excluded', models.TextField(blank=True, null=True)),
                ('regions_included', models.TextField(blank=True, null=True)),
                ('regions_excluded', models.TextField(blank=True, null=True)),
                ('market_date_role', models.CharField(max_length=40)),
                ('market_date_format', models.CharField(max_length=40)),
                ('market_date', models.CharField(max_length=255)),
                ('price', models.CharField(max_length=255, blank=True, null=True)),
                ('discount', models.CharField(max_length=255, blank=True, null=True)),
                ('price_type_code', models.CharField(max_length=255, blank=True, null=True)),
                ('currency_code', models.CharField(max_length=255, blank=True, null=True)),
                ('tax_rate_code', models.CharField(max_length=255, blank=True, null=True)),
                ('tax_type_code', models.CharField(max_length=255, blank=True, null=True)),
                ('agent_id', models.BigIntegerField(blank=True, null=True)),
                ('supplier_id', models.BigIntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'markets',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MetadataDescriptions',
            fields=[
                ('metadata_description_id', models.BigIntegerField(primary_key=True, serialize=False)),
                ('assoc_type', models.BigIntegerField()),
                ('assoc_id', models.BigIntegerField()),
                ('schema_namespace', models.CharField(max_length=255)),
                ('schema_name', models.CharField(max_length=255)),
                ('display_name', models.CharField(max_length=255, blank=True, null=True)),
                ('seq', models.BigIntegerField()),
            ],
            options={
                'db_table': 'metadata_descriptions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MetadataDescriptionSettings',
            fields=[
                ('id', models.AutoField(primary_key=True, auto_created=True, verbose_name='ID', serialize=False)),
                ('metadata_description_id', models.BigIntegerField()),
                ('locale', models.CharField(max_length=5)),
                ('setting_name', models.CharField(max_length=255)),
                ('setting_value', models.TextField(blank=True, null=True)),
                ('setting_type', models.CharField(max_length=6)),
            ],
            options={
                'db_table': 'metadata_description_settings',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Metrics',
            fields=[
                ('id', models.AutoField(primary_key=True, auto_created=True, verbose_name='ID', serialize=False)),
                ('load_id', models.CharField(max_length=255)),
                ('context_id', models.BigIntegerField()),
                ('pkp_section_id', models.BigIntegerField(blank=True, null=True)),
                ('assoc_object_type', models.BigIntegerField(blank=True, null=True)),
                ('assoc_object_id', models.BigIntegerField(blank=True, null=True)),
                ('submission_id', models.BigIntegerField(blank=True, null=True)),
                ('representation_id', models.BigIntegerField(blank=True, null=True)),
                ('assoc_type', models.BigIntegerField()),
                ('assoc_id', models.BigIntegerField()),
                ('day', models.CharField(max_length=8, blank=True, null=True)),
                ('month', models.CharField(max_length=6, blank=True, null=True)),
                ('file_type', models.IntegerField(blank=True, null=True)),
                ('country_id', models.CharField(max_length=2, blank=True, null=True)),
                ('region', models.CharField(max_length=2, blank=True, null=True)),
                ('city', models.CharField(max_length=255, blank=True, null=True)),
                ('metric_type', models.CharField(max_length=255)),
                ('metric', models.IntegerField()),
            ],
            options={
                'db_table': 'metrics',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Mutex',
            fields=[
                ('i', models.IntegerField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'mutex',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='NewReleases',
            fields=[
                ('id', models.AutoField(primary_key=True, auto_created=True, verbose_name='ID', serialize=False)),
                ('submission_id', models.BigIntegerField()),
                ('assoc_type', models.BigIntegerField()),
                ('assoc_id', models.BigIntegerField()),
            ],
            options={
                'db_table': 'new_releases',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Notes',
            fields=[
                ('note_id', models.BigIntegerField(primary_key=True, serialize=False)),
                ('assoc_type', models.BigIntegerField(blank=True, null=True)),
                ('assoc_id', models.BigIntegerField(blank=True, null=True)),
                ('user_id', models.BigIntegerField()),
                ('date_created', models.DateTimeField()),
                ('date_modified', models.DateTimeField(blank=True, null=True)),
                ('title', models.CharField(max_length=255, blank=True, null=True)),
                ('contents', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'notes',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='NotificationMailList',
            fields=[
                ('notification_mail_list_id', models.BigIntegerField(primary_key=True, serialize=False)),
                ('email', models.CharField(max_length=90)),
                ('confirmed', models.IntegerField()),
                ('token', models.CharField(max_length=40)),
                ('context', models.BigIntegerField()),
            ],
            options={
                'db_table': 'notification_mail_list',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Notifications',
            fields=[
                ('notification_id', models.BigIntegerField(primary_key=True, serialize=False)),
                ('context_id', models.BigIntegerField()),
                ('user_id', models.BigIntegerField(blank=True, null=True)),
                ('level', models.BigIntegerField()),
                ('type', models.BigIntegerField()),
                ('date_created', models.DateTimeField()),
                ('date_read', models.DateTimeField(blank=True, null=True)),
                ('assoc_type', models.BigIntegerField(blank=True, null=True)),
                ('assoc_id', models.BigIntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'notifications',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='NotificationSettings',
            fields=[
                ('id', models.AutoField(primary_key=True, auto_created=True, verbose_name='ID', serialize=False)),
                ('notification_id', models.BigIntegerField()),
                ('locale', models.CharField(max_length=5, blank=True, null=True)),
                ('setting_name', models.CharField(max_length=64)),
                ('setting_value', models.TextField(blank=True, null=True)),
                ('setting_type', models.CharField(max_length=6)),
            ],
            options={
                'db_table': 'notification_settings',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='NotificationStatus',
            fields=[
                ('id', models.AutoField(primary_key=True, auto_created=True, verbose_name='ID', serialize=False)),
                ('press_id', models.BigIntegerField()),
                ('user_id', models.BigIntegerField()),
            ],
            options={
                'db_table': 'notification_status',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='NotificationSubscriptionSettings',
            fields=[
                ('setting_id', models.BigIntegerField(primary_key=True, serialize=False)),
                ('setting_name', models.CharField(max_length=64)),
                ('setting_value', models.TextField(blank=True, null=True)),
                ('user_id', models.BigIntegerField()),
                ('context', models.BigIntegerField()),
                ('setting_type', models.CharField(max_length=6)),
            ],
            options={
                'db_table': 'notification_subscription_settings',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='OaiResumptionTokens',
            fields=[
                ('id', models.AutoField(primary_key=True, auto_created=True, verbose_name='ID', serialize=False)),
                ('token', models.CharField(max_length=32, unique=True)),
                ('expire', models.BigIntegerField()),
                ('record_offset', models.IntegerField()),
                ('params', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'oai_resumption_tokens',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PaypalTransactions',
            fields=[
                ('txn_id', models.CharField(primary_key=True, max_length=17, serialize=False)),
                ('txn_type', models.CharField(max_length=20, blank=True, null=True)),
                ('payer_email', models.CharField(max_length=127, blank=True, null=True)),
                ('receiver_email', models.CharField(max_length=127, blank=True, null=True)),
                ('item_number', models.CharField(max_length=127, blank=True, null=True)),
                ('payment_date', models.CharField(max_length=127, blank=True, null=True)),
                ('payer_id', models.CharField(max_length=13, blank=True, null=True)),
                ('receiver_id', models.CharField(max_length=13, blank=True, null=True)),
            ],
            options={
                'db_table': 'paypal_transactions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PluginSettings',
            fields=[
                ('id', models.AutoField(primary_key=True, auto_created=True, verbose_name='ID', serialize=False)),
                ('plugin_name', models.CharField(max_length=80)),
                ('context_id', models.BigIntegerField()),
                ('setting_name', models.CharField(max_length=80)),
                ('setting_value', models.TextField(blank=True, null=True)),
                ('setting_type', models.CharField(max_length=6)),
            ],
            options={
                'db_table': 'plugin_settings',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Presses',
            fields=[
                ('press_id', models.BigIntegerField(primary_key=True, serialize=False)),
                ('path', models.CharField(max_length=32, unique=True)),
                ('seq', models.FloatField()),
                ('primary_locale', models.CharField(max_length=5)),
                ('enabled', models.IntegerField()),
            ],
            options={
                'db_table': 'presses',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PressSettings',
            fields=[
                ('press_id', models.BigIntegerField(primary_key=True)),
                ('locale', models.CharField(primary_key=True, max_length=5)),
                ('setting_name', models.CharField(primary_key=True, max_length=255, serialize=False)),
                ('setting_value', models.TextField(blank=True, null=True)),
                ('setting_type', models.CharField(max_length=6)),
            ],
            options={
                'db_table': 'press_settings',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Processes',
            fields=[
                ('id', models.AutoField(primary_key=True, auto_created=True, verbose_name='ID', serialize=False)),
                ('process_id', models.CharField(max_length=23, unique=True)),
                ('process_type', models.IntegerField()),
                ('time_started', models.BigIntegerField()),
                ('additional_data', models.TextField(blank=True, null=True)),
                ('obliterated', models.IntegerField()),
            ],
            options={
                'db_table': 'processes',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PublicationDates',
            fields=[
                ('publication_date_id', models.BigIntegerField(primary_key=True, serialize=False)),
                ('publication_format_id', models.BigIntegerField()),
                ('role', models.CharField(max_length=40)),
                ('date_format', models.CharField(max_length=40)),
                ('date', models.CharField(max_length=255)),
            ],
            options={
                'db_table': 'publication_dates',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PublicationFormats',
            fields=[
                ('publication_format_id', models.BigIntegerField(primary_key=True, serialize=False)),
                ('submission_id', models.BigIntegerField()),
                ('physical_format', models.IntegerField(blank=True, null=True)),
                ('entry_key', models.CharField(max_length=64, blank=True, null=True)),
                ('seq', models.FloatField()),
                ('file_size', models.CharField(max_length=255, blank=True, null=True)),
                ('front_matter', models.CharField(max_length=255, blank=True, null=True)),
                ('back_matter', models.CharField(max_length=255, blank=True, null=True)),
                ('height', models.CharField(max_length=255, blank=True, null=True)),
                ('height_unit_code', models.CharField(max_length=255, blank=True, null=True)),
                ('width', models.CharField(max_length=255, blank=True, null=True)),
                ('width_unit_code', models.CharField(max_length=255, blank=True, null=True)),
                ('thickness', models.CharField(max_length=255, blank=True, null=True)),
                ('thickness_unit_code', models.CharField(max_length=255, blank=True, null=True)),
                ('weight', models.CharField(max_length=255, blank=True, null=True)),
                ('weight_unit_code', models.CharField(max_length=255, blank=True, null=True)),
                ('product_composition_code', models.CharField(max_length=255, blank=True, null=True)),
                ('product_form_detail_code', models.CharField(max_length=255, blank=True, null=True)),
                ('country_manufacture_code', models.CharField(max_length=255, blank=True, null=True)),
                ('imprint', models.CharField(max_length=255, blank=True, null=True)),
                ('product_availability_code', models.CharField(max_length=255, blank=True, null=True)),
                ('technical_protection_code', models.CharField(max_length=255, blank=True, null=True)),
                ('returnable_indicator_code', models.CharField(max_length=255, blank=True, null=True)),
                ('is_approved', models.IntegerField()),
                ('is_available', models.IntegerField()),
                ('remote_url', models.CharField(max_length=2047, blank=True, null=True)),
            ],
            options={
                'db_table': 'publication_formats',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PublicationFormatSettings',
            fields=[
                ('publication_format_id', models.BigIntegerField(primary_key=True)),
                ('locale', models.CharField(primary_key=True, max_length=5)),
                ('setting_name', models.CharField(primary_key=True, max_length=255, serialize=False)),
                ('setting_value', models.TextField(blank=True, null=True)),
                ('setting_type', models.CharField(max_length=6)),
            ],
            options={
                'db_table': 'publication_format_settings',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PublishedSubmissions',
            fields=[
                ('pub_id', models.BigIntegerField(primary_key=True, serialize=False)),
                ('submission_id', models.BigIntegerField(unique=True)),
                ('date_published', models.DateTimeField(blank=True, null=True)),
                ('audience', models.CharField(max_length=255, blank=True, null=True)),
                ('audience_range_qualifier', models.CharField(max_length=255, blank=True, null=True)),
                ('audience_range_from', models.CharField(max_length=255, blank=True, null=True)),
                ('audience_range_to', models.CharField(max_length=255, blank=True, null=True)),
                ('audience_range_exact', models.CharField(max_length=255, blank=True, null=True)),
                ('cover_image', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'published_submissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Queries',
            fields=[
                ('query_id', models.BigIntegerField(primary_key=True, serialize=False)),
                ('assoc_type', models.BigIntegerField()),
                ('assoc_id', models.BigIntegerField()),
                ('stage_id', models.IntegerField()),
                ('seq', models.FloatField()),
                ('date_posted', models.DateTimeField(blank=True, null=True)),
                ('date_modified', models.DateTimeField(blank=True, null=True)),
                ('closed', models.SmallIntegerField()),
            ],
            options={
                'db_table': 'queries',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='QueryParticipants',
            fields=[
                ('id', models.AutoField(primary_key=True, auto_created=True, verbose_name='ID', serialize=False)),
                ('query_id', models.BigIntegerField()),
                ('user_id', models.BigIntegerField()),
            ],
            options={
                'db_table': 'query_participants',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='QueuedPayments',
            fields=[
                ('queued_payment_id', models.BigIntegerField(primary_key=True, serialize=False)),
                ('date_created', models.DateTimeField()),
                ('date_modified', models.DateTimeField()),
                ('expiry_date', models.DateField(blank=True, null=True)),
                ('payment_data', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'queued_payments',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Representatives',
            fields=[
                ('representative_id', models.BigIntegerField(primary_key=True, serialize=False)),
                ('submission_id', models.BigIntegerField()),
                ('role', models.CharField(max_length=40)),
                ('representative_id_type', models.CharField(max_length=255, blank=True, null=True)),
                ('representative_id_value', models.CharField(max_length=255, blank=True, null=True)),
                ('name', models.CharField(max_length=255, blank=True, null=True)),
                ('phone', models.CharField(max_length=255, blank=True, null=True)),
                ('email', models.CharField(max_length=255, blank=True, null=True)),
                ('url', models.CharField(max_length=2047, blank=True, null=True)),
                ('is_supplier', models.IntegerField()),
            ],
            options={
                'db_table': 'representatives',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ReviewAssignments',
            fields=[
                ('review_id', models.BigIntegerField(primary_key=True, serialize=False)),
                ('submission_id', models.BigIntegerField()),
                ('reviewer_id', models.BigIntegerField()),
                ('competing_interests', models.TextField(blank=True, null=True)),
                ('recommendation', models.IntegerField(blank=True, null=True)),
                ('date_assigned', models.DateTimeField(blank=True, null=True)),
                ('date_notified', models.DateTimeField(blank=True, null=True)),
                ('date_confirmed', models.DateTimeField(blank=True, null=True)),
                ('date_completed', models.DateTimeField(blank=True, null=True)),
                ('date_acknowledged', models.DateTimeField(blank=True, null=True)),
                ('date_due', models.DateTimeField(blank=True, null=True)),
                ('date_response_due', models.DateTimeField(blank=True, null=True)),
                ('last_modified', models.DateTimeField(blank=True, null=True)),
                ('reminder_was_automatic', models.IntegerField()),
                ('declined', models.IntegerField()),
                ('replaced', models.IntegerField()),
                ('cancelled', models.IntegerField()),
                ('reviewer_file_id', models.BigIntegerField(blank=True, null=True)),
                ('date_rated', models.DateTimeField(blank=True, null=True)),
                ('date_reminded', models.DateTimeField(blank=True, null=True)),
                ('quality', models.IntegerField(blank=True, null=True)),
                ('review_round_id', models.BigIntegerField(blank=True, null=True)),
                ('stage_id', models.IntegerField()),
                ('review_method', models.IntegerField()),
                ('round', models.IntegerField()),
                ('step', models.IntegerField()),
                ('review_form_id', models.BigIntegerField(blank=True, null=True)),
                ('unconsidered', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'review_assignments',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ReviewFiles',
            fields=[
                ('id', models.AutoField(primary_key=True, auto_created=True, verbose_name='ID', serialize=False)),
                ('review_id', models.BigIntegerField()),
                ('file_id', models.BigIntegerField()),
            ],
            options={
                'db_table': 'review_files',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ReviewFormElements',
            fields=[
                ('review_form_element_id', models.BigIntegerField(primary_key=True, serialize=False)),
                ('review_form_id', models.BigIntegerField()),
                ('seq', models.FloatField(blank=True, null=True)),
                ('element_type', models.BigIntegerField(blank=True, null=True)),
                ('required', models.IntegerField(blank=True, null=True)),
                ('included', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'review_form_elements',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ReviewFormElementSettings',
            fields=[
                ('id', models.AutoField(primary_key=True, auto_created=True, verbose_name='ID', serialize=False)),
                ('review_form_element_id', models.BigIntegerField()),
                ('locale', models.CharField(max_length=5)),
                ('setting_name', models.CharField(max_length=255)),
                ('setting_value', models.TextField(blank=True, null=True)),
                ('setting_type', models.CharField(max_length=6)),
            ],
            options={
                'db_table': 'review_form_element_settings',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ReviewFormResponses',
            fields=[
                ('id', models.AutoField(primary_key=True, auto_created=True, verbose_name='ID', serialize=False)),
                ('review_form_element_id', models.BigIntegerField()),
                ('review_id', models.BigIntegerField()),
                ('response_type', models.CharField(max_length=6, blank=True, null=True)),
                ('response_value', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'review_form_responses',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ReviewForms',
            fields=[
                ('review_form_id', models.BigIntegerField(primary_key=True, serialize=False)),
                ('assoc_type', models.BigIntegerField(blank=True, null=True)),
                ('assoc_id', models.BigIntegerField(blank=True, null=True)),
                ('seq', models.FloatField(blank=True, null=True)),
                ('is_active', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'review_forms',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ReviewFormSettings',
            fields=[
                ('id', models.AutoField(primary_key=True, auto_created=True, verbose_name='ID', serialize=False)),
                ('review_form_id', models.BigIntegerField()),
                ('locale', models.CharField(max_length=5)),
                ('setting_name', models.CharField(max_length=255)),
                ('setting_value', models.TextField(blank=True, null=True)),
                ('setting_type', models.CharField(max_length=6)),
            ],
            options={
                'db_table': 'review_form_settings',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ReviewRoundFiles',
            fields=[
                ('id', models.AutoField(primary_key=True, auto_created=True, verbose_name='ID', serialize=False)),
                ('submission_id', models.BigIntegerField()),
                ('review_round_id', models.BigIntegerField()),
                ('stage_id', models.IntegerField()),
                ('file_id', models.BigIntegerField()),
                ('revision', models.BigIntegerField()),
            ],
            options={
                'db_table': 'review_round_files',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ReviewRounds',
            fields=[
                ('review_round_id', models.BigIntegerField(primary_key=True, serialize=False)),
                ('submission_id', models.BigIntegerField()),
                ('stage_id', models.BigIntegerField(blank=True, null=True)),
                ('round', models.IntegerField()),
                ('review_revision', models.BigIntegerField(blank=True, null=True)),
                ('status', models.BigIntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'review_rounds',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SalesRights',
            fields=[
                ('sales_rights_id', models.BigIntegerField(primary_key=True, serialize=False)),
                ('publication_format_id', models.BigIntegerField()),
                ('type', models.CharField(max_length=40)),
                ('row_setting', models.IntegerField()),
                ('countries_included', models.TextField(blank=True, null=True)),
                ('countries_excluded', models.TextField(blank=True, null=True)),
                ('regions_included', models.TextField(blank=True, null=True)),
                ('regions_excluded', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'sales_rights',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ScheduledTasks',
            fields=[
                ('id', models.AutoField(primary_key=True, auto_created=True, verbose_name='ID', serialize=False)),
                ('class_name', models.CharField(max_length=255, unique=True)),
                ('last_run', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'scheduled_tasks',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SectionEditors',
            fields=[
                ('id', models.AutoField(primary_key=True, auto_created=True, verbose_name='ID', serialize=False)),
                ('context_id', models.BigIntegerField()),
                ('section_id', models.BigIntegerField()),
                ('user_id', models.BigIntegerField()),
            ],
            options={
                'db_table': 'section_editors',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Series',
            fields=[
                ('series_id', models.BigIntegerField(primary_key=True, serialize=False)),
                ('press_id', models.BigIntegerField()),
                ('seq', models.FloatField(blank=True, null=True)),
                ('featured', models.IntegerField()),
                ('editor_restricted', models.IntegerField()),
                ('path', models.CharField(max_length=255)),
                ('image', models.TextField(blank=True, null=True)),
                ('review_form_id', models.BigIntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'series',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SeriesCategories',
            fields=[
                ('id', models.AutoField(primary_key=True, auto_created=True, verbose_name='ID', serialize=False)),
                ('series_id', models.BigIntegerField()),
                ('category_id', models.BigIntegerField()),
            ],
            options={
                'db_table': 'series_categories',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SeriesEditors',
            fields=[
                ('id', models.AutoField(primary_key=True, auto_created=True, verbose_name='ID', serialize=False)),
                ('press_id', models.BigIntegerField()),
                ('series_id', models.BigIntegerField()),
                ('user_id', models.BigIntegerField()),
                ('can_edit', models.IntegerField()),
                ('can_review', models.IntegerField()),
            ],
            options={
                'db_table': 'series_editors',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SeriesSettings',
            fields=[
                ('id', models.AutoField(primary_key=True, auto_created=True, verbose_name='ID', serialize=False)),
                ('series_id', models.BigIntegerField()),
                ('locale', models.CharField(max_length=5)),
                ('setting_name', models.CharField(max_length=255)),
                ('setting_value', models.TextField(blank=True, null=True)),
                ('setting_type', models.CharField(max_length=6)),
            ],
            options={
                'db_table': 'series_settings',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Sessions',
            fields=[
                ('id', models.AutoField(primary_key=True, auto_created=True, verbose_name='ID', serialize=False)),
                ('session_id', models.CharField(max_length=128, unique=True)),
                ('user_id', models.BigIntegerField(blank=True, null=True)),
                ('ip_address', models.CharField(max_length=39)),
                ('user_agent', models.CharField(max_length=255, blank=True, null=True)),
                ('created', models.BigIntegerField()),
                ('last_used', models.BigIntegerField()),
                ('remember', models.IntegerField()),
                ('data', models.TextField(blank=True, null=True)),
                ('domain', models.CharField(max_length=255, blank=True, null=True)),
            ],
            options={
                'db_table': 'sessions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Site',
            fields=[
                ('id', models.AutoField(primary_key=True, auto_created=True, verbose_name='ID', serialize=False)),
                ('redirect', models.BigIntegerField()),
                ('primary_locale', models.CharField(max_length=5)),
                ('min_password_length', models.IntegerField()),
                ('installed_locales', models.CharField(max_length=255)),
                ('supported_locales', models.CharField(max_length=255, blank=True, null=True)),
                ('original_style_file_name', models.CharField(max_length=255, blank=True, null=True)),
            ],
            options={
                'db_table': 'site',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SiteSettings',
            fields=[
                ('id', models.AutoField(primary_key=True, auto_created=True, verbose_name='ID', serialize=False)),
                ('setting_name', models.CharField(max_length=255)),
                ('locale', models.CharField(max_length=5)),
                ('setting_value', models.TextField(blank=True, null=True)),
                ('setting_type', models.CharField(max_length=6)),
            ],
            options={
                'db_table': 'site_settings',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SocialMedia',
            fields=[
                ('social_media_id', models.BigIntegerField(primary_key=True, serialize=False)),
                ('context_id', models.BigIntegerField()),
                ('code', models.TextField(blank=True, null=True)),
                ('include_in_catalog', models.SmallIntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'social_media',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SocialMediaSettings',
            fields=[
                ('id', models.AutoField(primary_key=True, auto_created=True, verbose_name='ID', serialize=False)),
                ('social_media_id', models.BigIntegerField()),
                ('locale', models.CharField(max_length=5)),
                ('setting_name', models.CharField(max_length=255)),
                ('setting_value', models.TextField(blank=True, null=True)),
                ('setting_type', models.CharField(max_length=6)),
            ],
            options={
                'db_table': 'social_media_settings',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Spotlights',
            fields=[
                ('spotlight_id', models.BigIntegerField(primary_key=True, serialize=False)),
                ('assoc_type', models.SmallIntegerField()),
                ('assoc_id', models.SmallIntegerField()),
                ('press_id', models.BigIntegerField()),
            ],
            options={
                'db_table': 'spotlights',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SpotlightSettings',
            fields=[
                ('id', models.AutoField(primary_key=True, auto_created=True, verbose_name='ID', serialize=False)),
                ('spotlight_id', models.BigIntegerField()),
                ('locale', models.CharField(max_length=5)),
                ('setting_name', models.CharField(max_length=255)),
                ('setting_value', models.TextField(blank=True, null=True)),
                ('setting_type', models.CharField(max_length=6)),
            ],
            options={
                'db_table': 'spotlight_settings',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='StageAssignments',
            fields=[
                ('stage_assignment_id', models.BigIntegerField(primary_key=True, serialize=False)),
                ('submission_id', models.BigIntegerField()),
                ('user_group_id', models.BigIntegerField()),
                ('user_id', models.BigIntegerField()),
                ('date_assigned', models.DateTimeField()),
            ],
            options={
                'db_table': 'stage_assignments',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='StaticPages',
            fields=[
                ('static_page_id', models.BigIntegerField(primary_key=True, serialize=False)),
                ('path', models.CharField(max_length=255)),
                ('context_id', models.BigIntegerField()),
            ],
            options={
                'db_table': 'static_pages',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='StaticPageSettings',
            fields=[
                ('id', models.AutoField(primary_key=True, auto_created=True, verbose_name='ID', serialize=False)),
                ('static_page_id', models.BigIntegerField()),
                ('locale', models.CharField(max_length=5)),
                ('setting_name', models.CharField(max_length=255)),
                ('setting_value', models.TextField(blank=True, null=True)),
                ('setting_type', models.CharField(max_length=6)),
            ],
            options={
                'db_table': 'static_page_settings',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SubmissionArtworkFiles',
            fields=[
                ('file_id', models.BigIntegerField(primary_key=True, serialize=False)),
                ('revision', models.BigIntegerField()),
                ('caption', models.TextField(blank=True, null=True)),
                ('credit', models.CharField(max_length=255, blank=True, null=True)),
                ('copyright_owner', models.CharField(max_length=255, blank=True, null=True)),
                ('copyright_owner_contact', models.TextField(blank=True, null=True)),
                ('permission_terms', models.TextField(blank=True, null=True)),
                ('permission_file_id', models.BigIntegerField(blank=True, null=True)),
                ('chapter_id', models.BigIntegerField(blank=True, null=True)),
                ('contact_author', models.BigIntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'submission_artwork_files',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SubmissionCategories',
            fields=[
                ('id', models.AutoField(primary_key=True, auto_created=True, verbose_name='ID', serialize=False)),
                ('submission_id', models.BigIntegerField()),
                ('category_id', models.BigIntegerField()),
            ],
            options={
                'db_table': 'submission_categories',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SubmissionChapterAuthors',
            fields=[
                ('author_id', models.BigIntegerField(primary_key=True, serialize=False)),
                ('chapter_id', models.BigIntegerField()),
                ('submission_id', models.BigIntegerField()),
                ('primary_contact', models.IntegerField()),
                ('seq', models.FloatField()),
            ],
            options={
                'db_table': 'submission_chapter_authors',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SubmissionChapters',
            fields=[
                ('chapter_id', models.BigIntegerField(primary_key=True, serialize=False)),
                ('submission_id', models.BigIntegerField()),
                ('chapter_seq', models.FloatField()),
            ],
            options={
                'db_table': 'submission_chapters',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SubmissionChapterSettings',
            fields=[
                ('chapter_id', models.BigIntegerField(primary_key=True, serialize=False)),
                ('locale', models.CharField(max_length=5)),
                ('setting_name', models.CharField(max_length=255)),
                ('setting_value', models.TextField(blank=True, null=True)),
                ('setting_type', models.CharField(max_length=6)),
            ],
            options={
                'db_table': 'submission_chapter_settings',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SubmissionComments',
            fields=[
                ('comment_id', models.BigIntegerField(primary_key=True, serialize=False)),
                ('comment_type', models.BigIntegerField(blank=True, null=True)),
                ('role_id', models.BigIntegerField()),
                ('submission_id', models.BigIntegerField()),
                ('assoc_id', models.BigIntegerField()),
                ('author_id', models.BigIntegerField()),
                ('comment_title', models.CharField(max_length=90)),
                ('comments', models.TextField(blank=True, null=True)),
                ('date_posted', models.DateTimeField(blank=True, null=True)),
                ('date_modified', models.DateTimeField(blank=True, null=True)),
                ('viewable', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'submission_comments',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SubmissionFiles',
            fields=[
                ('file_id', models.BigIntegerField(primary_key=True, serialize=False)),
                ('revision', models.BigIntegerField(primary_key=True)),
                ('source_file_id', models.BigIntegerField(blank=True, null=True)),
                ('source_revision', models.BigIntegerField(blank=True, null=True)),
                ('submission_id', models.BigIntegerField()),
                ('file_type', models.CharField(max_length=255)),
                ('genre_id', models.BigIntegerField(blank=True, null=True)),
                ('file_size', models.BigIntegerField()),
                ('original_file_name', models.CharField(max_length=127, blank=True, null=True)),
                ('file_stage', models.BigIntegerField()),
                ('direct_sales_price', models.CharField(max_length=255, blank=True, null=True)),
                ('sales_type', models.CharField(max_length=255, blank=True, null=True)),
                ('viewable', models.IntegerField(blank=True, null=True)),
                ('date_uploaded', models.DateTimeField()),
                ('date_modified', models.DateTimeField()),
                ('user_group_id', models.BigIntegerField(blank=True, null=True)),
                ('uploader_user_id', models.BigIntegerField(blank=True, null=True)),
                ('assoc_type', models.BigIntegerField(blank=True, null=True)),
                ('assoc_id', models.BigIntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'submission_files',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SubmissionFileSettings',
            fields=[
                ('file_id', models.BigIntegerField(primary_key=True, serialize=False)),
                ('locale', models.CharField(primary_key=True, max_length=5)),
                ('setting_name', models.CharField(primary_key=True, max_length=255)),
                ('setting_value', models.TextField(blank=True, null=True)),
                ('setting_type', models.CharField(max_length=6)),
            ],
            options={
                'db_table': 'submission_file_settings',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Submissions',
            fields=[
                ('submission_id', models.BigIntegerField(primary_key=True, serialize=False)),
                ('locale', models.CharField(max_length=5, blank=True, null=True)),
                ('context_id', models.BigIntegerField()),
                ('series_id', models.BigIntegerField(blank=True, null=True)),
                ('series_position', models.CharField(max_length=255, blank=True, null=True)),
                ('edited_volume', models.IntegerField()),
                ('language', models.CharField(max_length=10, blank=True, null=True)),
                ('comments_to_ed', models.TextField(blank=True, null=True)),
                ('date_submitted', models.DateTimeField(blank=True, null=True)),
                ('last_modified', models.DateTimeField(blank=True, null=True)),
                ('date_status_modified', models.DateTimeField(blank=True, null=True)),
                ('status', models.IntegerField()),
                ('submission_progress', models.IntegerField()),
                ('pages', models.CharField(max_length=255, blank=True, null=True)),
                ('fast_tracked', models.IntegerField()),
                ('hide_author', models.IntegerField()),
                ('stage_id', models.BigIntegerField()),
                ('citations', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'submissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SubmissionSearchKeywordList',
            fields=[
                ('keyword_id', models.BigIntegerField(primary_key=True, serialize=False)),
                ('keyword_text', models.CharField(max_length=60, unique=True)),
            ],
            options={
                'db_table': 'submission_search_keyword_list',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SubmissionSearchObjectKeywords',
            fields=[
                ('id', models.AutoField(primary_key=True, auto_created=True, verbose_name='ID', serialize=False)),
                ('object_id', models.BigIntegerField()),
                ('keyword_id', models.BigIntegerField()),
                ('pos', models.IntegerField()),
            ],
            options={
                'db_table': 'submission_search_object_keywords',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SubmissionSearchObjects',
            fields=[
                ('object_id', models.BigIntegerField(primary_key=True, serialize=False)),
                ('submission_id', models.BigIntegerField()),
                ('type', models.IntegerField()),
                ('assoc_id', models.BigIntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'submission_search_objects',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SubmissionSettings',
            fields=[
                ('submission_id', models.BigIntegerField(primary_key=True, serialize=False)),
                ('locale', models.CharField(primary_key=True, max_length=5)),
                ('setting_name', models.CharField(primary_key=True, max_length=255)),
                ('setting_value', models.TextField(blank=True, null=True)),
                ('setting_type', models.CharField(max_length=6)),
            ],
            options={
                'db_table': 'submission_settings',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SubmissionSupplementaryFiles',
            fields=[
                ('file_id', models.BigIntegerField(primary_key=True, serialize=False)),
                ('revision', models.BigIntegerField()),
            ],
            options={
                'db_table': 'submission_supplementary_files',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TemporaryFiles',
            fields=[
                ('file_id', models.BigIntegerField(primary_key=True, serialize=False)),
                ('user_id', models.BigIntegerField()),
                ('file_name', models.CharField(max_length=90)),
                ('file_type', models.CharField(max_length=255, blank=True, null=True)),
                ('file_size', models.BigIntegerField()),
                ('original_file_name', models.CharField(max_length=127, blank=True, null=True)),
                ('date_uploaded', models.DateTimeField()),
            ],
            options={
                'db_table': 'temporary_files',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TGeoipCountry',
            fields=[
                ('id', models.AutoField(primary_key=True, auto_created=True, verbose_name='ID', serialize=False)),
                ('ip_begin', models.CharField(max_length=15, unique=True)),
                ('ip_end', models.CharField(max_length=15)),
                ('ip_decimal_begin', models.IntegerField()),
                ('ip_decimal_end', models.IntegerField()),
                ('country_code', models.CharField(max_length=3)),
                ('country_name', models.CharField(max_length=45)),
            ],
            options={
                'db_table': 't_geoip_country',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TKnvMetadata',
            fields=[
                ('id', models.AutoField(primary_key=True, auto_created=True, verbose_name='ID', serialize=False)),
                ('submission_id', models.IntegerField(blank=True, null=True)),
                ('isbn', models.IntegerField()),
                ('buchtitel', models.CharField(max_length=512, blank=True, null=True)),
                ('anz_teile', models.IntegerField(blank=True, null=True)),
                ('verlagsname', models.CharField(max_length=512, blank=True, null=True)),
                ('gln', models.IntegerField(blank=True, null=True)),
                ('bindeart', models.CharField(max_length=512, blank=True, null=True)),
                ('anz_rillungen', models.IntegerField(blank=True, null=True)),
                ('kapitalband', models.CharField(max_length=512, blank=True, null=True)),
                ('rueckenart', models.CharField(max_length=512, blank=True, null=True)),
                ('ansichtsexemplar', models.CharField(max_length=512, blank=True, null=True)),
                ('laendercode', models.CharField(max_length=512, blank=True, null=True)),
                ('adresszeile2', models.CharField(max_length=512, blank=True, null=True)),
                ('adresszeile3', models.CharField(max_length=512, blank=True, null=True)),
                ('ort', models.CharField(max_length=512, blank=True, null=True)),
                ('plz', models.IntegerField(blank=True, null=True)),
                ('strasse_und_nr', models.CharField(max_length=512, blank=True, null=True)),
                ('postfach', models.CharField(max_length=512, blank=True, null=True)),
                ('speicherung', models.CharField(max_length=512, blank=True, null=True)),
                ('dateiname_pdf_cover', models.CharField(max_length=512, blank=True, null=True)),
                ('teilnummer', models.IntegerField(blank=True, null=True)),
                ('anzahl_seiten', models.IntegerField(blank=True, null=True)),
                ('druckfarbe', models.CharField(max_length=512, blank=True, null=True)),
                ('pruefung_trimbox', models.CharField(max_length=512, blank=True, null=True)),
                ('prueftoleranz', models.CharField(max_length=512, blank=True, null=True)),
                ('papiertyp', models.CharField(max_length=512, blank=True, null=True)),
                ('laminierungsart', models.CharField(max_length=512, blank=True, null=True)),
                ('barcode_position', models.CharField(max_length=512, blank=True, null=True)),
                ('dateiname_pdf_innerwork_field', models.CharField(max_length=512, blank=True, null=True, db_column='dateiname_pdf_innerwork_')),
                ('farbraum', models.CharField(max_length=512, blank=True, null=True)),
                ('anzahl_farbseiten', models.IntegerField(blank=True, null=True)),
                ('breite_der_trimbox', models.IntegerField(blank=True, null=True)),
                ('hoehe_der_trimbox', models.IntegerField(blank=True, null=True)),
                ('f_papiertyp', models.CharField(max_length=512, blank=True, null=True)),
                ('letzte_seite', models.CharField(max_length=512, blank=True, null=True)),
            ],
            options={
                'db_table': 't_knv_metadata',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TLicenseSettings',
            fields=[
                ('license_id', models.IntegerField(primary_key=True, serialize=False)),
                ('locale', models.CharField(max_length=6)),
                ('setting_name', models.CharField(max_length=48)),
                ('setting_value', models.CharField(max_length=512, blank=True, null=True)),
            ],
            options={
                'db_table': 't_license_settings',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TOnixAdditionals',
            fields=[
                ('id', models.AutoField(primary_key=True, auto_created=True, verbose_name='ID', serialize=False)),
                ('submission_id', models.IntegerField(blank=True, null=True)),
                ('f_sent_date', models.DateField(blank=True, null=True)),
                ('f_pages_roman', models.CharField(max_length=512)),
                ('f_pages_arabic', models.IntegerField()),
                ('f_b191', models.IntegerField()),
                ('f_b068', models.CharField(max_length=512)),
                ('f_b069', models.CharField(max_length=512)),
                ('f_b070', models.CharField(max_length=512)),
                ('f_b069_wg', models.CharField(max_length=512)),
                ('f_b070_wg', models.TextField()),
                ('f114_file_type_code', models.CharField(max_length=512)),
                ('f115_file_format_code', models.CharField(max_length=512)),
                ('f116_file_link_type', models.CharField(max_length=512)),
                ('f117_cover_image', models.CharField(max_length=512)),
            ],
            options={
                'db_table': 't_onix_additionals',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TUsageStatistics',
            fields=[
                ('id', models.AutoField(primary_key=True, auto_created=True, verbose_name='ID', serialize=False)),
                ('time_stamp', models.DateTimeField(blank=True, null=True)),
                ('client_ip', models.CharField(max_length=512, blank=True, null=True)),
                ('request_controller', models.CharField(max_length=512, blank=True, null=True)),
                ('request_function', models.CharField(max_length=512, blank=True, null=True)),
                ('request_extension', models.CharField(max_length=512, blank=True, null=True)),
                ('request_ajax', models.CharField(max_length=512, blank=True, null=True)),
                ('request_args', models.CharField(max_length=512, blank=True, null=True)),
                ('request_vars', models.CharField(max_length=512, blank=True, null=True)),
                ('request_view', models.CharField(max_length=512, blank=True, null=True)),
                ('request_http_user_agent', models.CharField(max_length=512, blank=True, null=True)),
                ('request_language', models.CharField(max_length=512, blank=True, null=True)),
                ('description', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 't_usage_statistics',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='UsageStatsTemporaryRecords',
            fields=[
                ('id', models.AutoField(primary_key=True, auto_created=True, verbose_name='ID', serialize=False)),
                ('assoc_id', models.BigIntegerField()),
                ('assoc_type', models.BigIntegerField()),
                ('day', models.BigIntegerField()),
                ('entry_time', models.BigIntegerField()),
                ('metric', models.BigIntegerField()),
                ('country_id', models.CharField(max_length=2, blank=True, null=True)),
                ('region', models.CharField(max_length=2, blank=True, null=True)),
                ('city', models.CharField(max_length=255, blank=True, null=True)),
                ('load_id', models.CharField(max_length=255)),
                ('file_type', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'usage_stats_temporary_records',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='UserGroups',
            fields=[
                ('user_group_id', models.BigIntegerField(primary_key=True, serialize=False)),
                ('context_id', models.BigIntegerField()),
                ('role_id', models.BigIntegerField()),
                ('is_default', models.IntegerField()),
                ('show_title', models.IntegerField()),
                ('permit_self_registration', models.IntegerField()),
            ],
            options={
                'db_table': 'user_groups',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='UserGroupSettings',
            fields=[
                ('id', models.AutoField(primary_key=True, auto_created=True, verbose_name='ID', serialize=False)),
                ('user_group_id', models.BigIntegerField()),
                ('locale', models.CharField(max_length=5)),
                ('setting_name', models.CharField(max_length=255)),
                ('setting_value', models.TextField(blank=True, null=True)),
                ('setting_type', models.CharField(max_length=6)),
            ],
            options={
                'db_table': 'user_group_settings',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='UserGroupStage',
            fields=[
                ('id', models.AutoField(primary_key=True, auto_created=True, verbose_name='ID', serialize=False)),
                ('context_id', models.BigIntegerField()),
                ('user_group_id', models.BigIntegerField()),
                ('stage_id', models.BigIntegerField()),
            ],
            options={
                'db_table': 'user_group_stage',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='UserInterests',
            fields=[
                ('id', models.AutoField(primary_key=True, auto_created=True, verbose_name='ID', serialize=False)),
                ('user_id', models.BigIntegerField()),
                ('controlled_vocab_entry_id', models.BigIntegerField()),
            ],
            options={
                'db_table': 'user_interests',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Users',
            fields=[
                ('user_id', models.BigIntegerField(primary_key=True, serialize=False)),
                ('username', models.CharField(max_length=32, unique=True)),
                ('password', models.CharField(max_length=255)),
                ('salutation', models.CharField(max_length=40, blank=True, null=True)),
                ('first_name', models.CharField(max_length=40)),
                ('middle_name', models.CharField(max_length=40, blank=True, null=True)),
                ('last_name', models.CharField(max_length=90)),
                ('suffix', models.CharField(max_length=40, blank=True, null=True)),
                ('gender', models.CharField(max_length=1, blank=True, null=True)),
                ('initials', models.CharField(max_length=5, blank=True, null=True)),
                ('email', models.CharField(max_length=90, unique=True)),
                ('url', models.CharField(max_length=2047, blank=True, null=True)),
                ('phone', models.CharField(max_length=24, blank=True, null=True)),
                ('mailing_address', models.CharField(max_length=255, blank=True, null=True)),
                ('billing_address', models.CharField(max_length=255, blank=True, null=True)),
                ('country', models.CharField(max_length=90, blank=True, null=True)),
                ('locales', models.CharField(max_length=255, blank=True, null=True)),
                ('date_last_email', models.DateTimeField(blank=True, null=True)),
                ('date_registered', models.DateTimeField()),
                ('date_validated', models.DateTimeField(blank=True, null=True)),
                ('date_last_login', models.DateTimeField()),
                ('must_change_password', models.IntegerField(blank=True, null=True)),
                ('auth_id', models.BigIntegerField(blank=True, null=True)),
                ('auth_str', models.CharField(max_length=255, blank=True, null=True)),
                ('disabled', models.IntegerField()),
                ('disabled_reason', models.TextField(blank=True, null=True)),
                ('inline_help', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'users',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='UserSettings',
            fields=[
                ('user_id', models.BigIntegerField(primary_key=True)),
                ('locale', models.CharField(primary_key=True, max_length=5)),
                ('setting_name', models.CharField(primary_key=True, max_length=255, serialize=False)),
                ('assoc_type', models.BigIntegerField(blank=True, null=True)),
                ('assoc_id', models.BigIntegerField(blank=True, null=True)),
                ('setting_value', models.TextField(blank=True, null=True)),
                ('setting_type', models.CharField(max_length=6)),
            ],
            options={
                'db_table': 'user_settings',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='UserUserGroups',
            fields=[
                ('id', models.AutoField(primary_key=True, auto_created=True, verbose_name='ID', serialize=False)),
                ('user_group_id', models.BigIntegerField()),
                ('user_id', models.BigIntegerField()),
            ],
            options={
                'db_table': 'user_user_groups',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Versions',
            fields=[
                ('id', models.AutoField(primary_key=True, auto_created=True, verbose_name='ID', serialize=False)),
                ('major', models.IntegerField()),
                ('minor', models.IntegerField()),
                ('revision', models.IntegerField()),
                ('build', models.IntegerField()),
                ('date_installed', models.DateTimeField()),
                ('current', models.IntegerField()),
                ('product_type', models.CharField(max_length=30, blank=True, null=True)),
                ('product', models.CharField(max_length=30, blank=True, null=True)),
                ('product_class_name', models.CharField(max_length=80, blank=True, null=True)),
                ('lazy_load', models.IntegerField()),
                ('sitewide', models.IntegerField()),
            ],
            options={
                'db_table': 'versions',
                'managed': False,
            },
        ),
    ]
